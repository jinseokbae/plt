params:
  seed: ${...seed}

  algo:
    name: cvae_agent

  model:
    name: cvae_group_model

  network:
    name: cvae_group
    separate: True

    space:
      continuous:
        mu_activation: None
        sigma_activation: None
        mu_init:
          name: default
        sigma_init:
          name: const_initializer
          val: -2.9
        fixed_sigma: True
        learn_sigma: False

    enc: # decoder
      units: [1024, 1024, 512]
      activation: relu
      d2rl: False

      initializer:
        name: default
      regularizer:
        name: None

    dec: # encoder
      units: [1024, 1024, 512]
      activation: relu
      d2rl: False

      initializer:
        name: default
      regularizer:
        name: None
    
    value: # value net
      units: [1024, 1024, 512]
      activation: relu
      d2rl: False

      initializer:
        name: default
      regularizer:
        name: None

    disc:
      units: [1024, 1024, 512]
      activation: relu

      initializer:
        name: default

  load_checkpoint: ${if:${...checkpoint},True,False} # flag which sets whether to load the checkpoint
  load_path: ${...checkpoint} # path to the checkpoint to load
  load_transfer_seed: ${if:${...transfer_seed},True,False} # flag which sets whether to load the checkpoint
  load_transfer_seed_path: ${...transfer_seed} # path to the checkpoint to load

  config:
    name: ${resolve_default:HumanoidImitate,${....experiment}}
    full_experiment_name: ${.name}
    env_name: rlgpu
    ppo: True
    multi_gpu: ${....multi_gpu}
    mixed_precision: False
    normalize_input: True
    normalize_value: True
    value_bootstrap: True
    num_actors: ${....task.env.numEnvs}
    reward_shaper:
      scale_value: 1
    normalize_advantage: True
    gamma: 0.95
    tau: 0.95
    learning_rate: 5e-5
    lr_schedule: constant
    kl_threshold: 0.008
    score_to_win: 20000
    max_epochs: ${resolve_default:200000,${....max_iterations}}
    save_best_after: 100
    save_frequency: 2500
    print_stats: True
    grad_norm: 1.0
    entropy_coef: 0.0
    truncate_grads: False
    e_clip: 0.1 # 0.2
    horizon_length: 16
    minibatch_size: 65536
    mini_epochs: 6
    critic_coef: 5
    clip_value: False
    seq_length: 4
    bounds_loss_coef: 10

    # Transfer learning
    transfer_part: ${resolve_default:"lower",${....transfer_part}}
    transfer_prior_mode: ${resolve_default:"fine-tune",${....transfer_prior_mode}}

    # goal obs related
    normalize_goal_input: True
    # prioritized sampling
    prioritized_sampling: False

    # cvae related
    latent_dim: ${resolve_default:64,${....latent_dim}}
    enc_type: "discrete"
    quant_type: ${resolve_default:"rvq",${....quant_type}}
    num_quants: ${resolve_default:8,${....num_quants}}
    code_num: ${resolve_default:1024,${....code_num}}
    vae_commit_loss_coef: ${resolve_default:1.0,${....vae_commit_loss_coef}}
    expert_loss_coef: ${resolve_default:10.0,${....expert_loss_coef}}

    # sep related
    dof_group: ${resolve_default:'upper-lower',${....dof_group}}
    
    # latent regularize
    latent_regularize: ${resolve_default:True,${....latent_regularize}}
    latent_reg_loss_coef: ${resolve_default:0.05,${....latent_reg_loss_coef}}

    # for test only
    eval_jitter: ${resolve_default:False, ${....eval_jitter}}
    num_inference_quants: ${resolve_default:0, ${....num_inference_quants}}


